// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: oim27Bu1ThuTn7RkGgxh5P
// Component: ZA9Iw5wPW8_J
import * as React from "react";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import {
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  useCurrentUser,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import * as plasmicAuth from "@plasmicapp/react-web/lib/auth";
import { usePlasmicDataSourceContext } from "@plasmicapp/data-sources-context";
import Button2 from "../../Button2"; // plasmic-import: Yp4SbBaPO1b8/component
import { Iframe } from "@plasmicpkgs/plasmic-basic-components";
import { useScreenVariants as useScreenVariantsith9ZDalCwV } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: Ith9ZDalCw-V/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "./plasmic.module.css"; // plasmic-import: oim27Bu1ThuTn7RkGgxh5P/projectcss
import sty from "./PlasmicContattaci.module.css"; // plasmic-import: ZA9Iw5wPW8_J/css
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: K_XxEM7Q4cIW/icon
import Icon38Icon from "./icons/PlasmicIcon__Icon38"; // plasmic-import: S_tcS_gFiIGf/icon
import Whatsapp128SvgrepoComsvgIcon from "./icons/PlasmicIcon__Whatsapp128SvgrepoComsvg"; // plasmic-import: FR01N8LietG4/icon
import Call1SvgrepoComsvgIcon from "./icons/PlasmicIcon__Call1SvgrepoComsvg"; // plasmic-import: 8oq_8f5cu7gv/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: FzYesm_3GL7h/icon
import InstagramSvgrepoComsvgIcon from "./icons/PlasmicIcon__InstagramSvgrepoComsvg"; // plasmic-import: Ykw0IS2_E4Wg/icon
import TiktokSvgrepoComsvgIcon from "./icons/PlasmicIcon__TiktokSvgrepoComsvg"; // plasmic-import: -HYOxdp1gh1y/icon
import MailAlt3SvgrepoComsvgIcon from "./icons/PlasmicIcon__MailAlt3SvgrepoComsvg"; // plasmic-import: lxw0LriFgpMb/icon

createPlasmicElementProxy;

export const PlasmicContattaci__VariantProps = new Array();

export const PlasmicContattaci__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicContattaci__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = useCurrentUser?.() || {};
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "textbox.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "textbox2.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "textbox3.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "textbox7.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "textbox6.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      },
      {
        path: "textbox4.value",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => ``
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsith9ZDalCwV()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicContattaci.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicContattaci.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicContattaci.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >
          <section
            data-plasmic-name={"section"}
            data-plasmic-override={overrides.section}
            className={classNames(projectcss.all, sty.section)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__fd7Bx)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__go0OI)}
              >
                <Button2
                  className={classNames("__wab_instance", sty.button2__jq6Rm)}
                  color={"clear"}
                  endIcon={
                    <Icon38Icon
                      className={classNames(projectcss.all, sty.svg__coadt)}
                      role={"img"}
                    />
                  }
                  link={`/`}
                  startIcon={
                    <ChecksvgIcon
                      className={classNames(projectcss.all, sty.svg__rbboY)}
                      role={"img"}
                    />
                  }
                  submitsForm={true}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__g6JuD)}
                    displayHeight={"60px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"60px"}
                    onClick={async event => {
                      const $steps = {};
                      $steps["goToHomepage"] = true
                        ? (() => {
                            const actionArgs = { destination: `/` };
                            return (({ destination }) => {
                              if (
                                typeof destination === "string" &&
                                destination.startsWith("#")
                              ) {
                                document
                                  .getElementById(destination.substr(1))
                                  .scrollIntoView({ behavior: "smooth" });
                              } else {
                                __nextRouter?.push(destination);
                              }
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["goToHomepage"] != null &&
                        typeof $steps["goToHomepage"] === "object" &&
                        typeof $steps["goToHomepage"].then === "function"
                      ) {
                        $steps["goToHomepage"] = await $steps["goToHomepage"];
                      }
                    }}
                    src={{
                      src: "/plasmic/naturalmentemare/images/fishingBoatBlackSilhouetteSmallShipsInFlatDesignKidToyStyleIllustrationOnWhiteBackgroundVectorRemovebgPreviewpng.png",
                      fullWidth: 500,
                      fullHeight: 500,
                      aspectRatio: undefined
                    }}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___5Gg8X
                    )}
                  >
                    {""}
                  </div>
                </Button2>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vwZko)}
                >
                  <Button2
                    className={classNames("__wab_instance", sty.button2__cYaFy)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___3Svks)}
                        role={"img"}
                      />
                    }
                    link={`/`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__zvM6M)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__f4K
                      )}
                    >
                      {"Home"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__doK9)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__wKnMl)}
                        role={"img"}
                      />
                    }
                    link={`/attivita`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg___1SRdS)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__pcOO
                      )}
                    >
                      {"Attivit\u00e0"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__uIba)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__up8Ea)}
                        role={"img"}
                      />
                    }
                    link={`/team`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg___4VkcW)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__bzwqX
                      )}
                    >
                      {"Chi siamo"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__e778V)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg___9W8Wh)}
                        role={"img"}
                      />
                    }
                    link={`/gallery`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__p5PX2)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__kVvDt
                      )}
                    >
                      {"Gallery"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__oZvzW)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__b0YXu)}
                        role={"img"}
                      />
                    }
                    link={`/contatti`}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__psUdk)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hvEvn
                      )}
                    >
                      {"Contatti"}
                    </div>
                  </Button2>
                </Stack__>
                {false ? (
                  <div
                    className={classNames(projectcss.all, sty.freeBox___9Gdl)}
                  >
                    <button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames(
                        projectcss.all,
                        projectcss.button,
                        projectcss.__wab_text,
                        sty.button
                      )}
                    >
                      {"Sign up"}
                    </button>
                    <Button2
                      className={classNames(
                        "__wab_instance",
                        sty.button2__mIekt
                      )}
                      color={"clear"}
                      endIcon={
                        <Icon38Icon
                          className={classNames(projectcss.all, sty.svg__c5Hus)}
                          role={"img"}
                        />
                      }
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__aqAL)}
                          role={"img"}
                        />
                      }
                      submitsForm={true}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__jrEc
                        )}
                      >
                        {"Log in"}
                      </div>
                    </Button2>
                  </div>
                ) : null}
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    projectcss.__wab_text,
                    sty.link__yehaE
                  )}
                  component={Link}
                  href={"https://www.plasmic.app/"}
                  platform={"nextjs"}
                >
                  {""}
                </PlasmicLink__>
                <PlasmicLink__
                  className={classNames(
                    projectcss.all,
                    projectcss.a,
                    sty.link__mRypU
                  )}
                  component={Link}
                  href={"https://wa.me/3758002079"}
                  platform={"nextjs"}
                  target={"_blank"}
                >
                  <Whatsapp128SvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__zKfh4)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__hh4Tp
                    )}
                  >
                    {" Scrivici su Whatsapp!"}
                  </div>
                </PlasmicLink__>
              </Stack__>
            </Stack__>
          </section>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__wIti)}
          >
            <div className={classNames(projectcss.all, sty.columns__wjhvn)}>
              <div className={classNames(projectcss.all, sty.column__lsVpq)}>
                <div
                  data-plasmic-name={"background2"}
                  data-plasmic-override={overrides.background2}
                  className={classNames(projectcss.all, sty.background2)}
                />
              </div>
            </div>
          </Stack__>
          <Stack__
            as={"div"}
            hasGap={true}
            className={classNames(projectcss.all, sty.freeBox__npDgx)}
          >
            <div className={classNames(projectcss.all, sty.columns___2Ywz)}>
              <div className={classNames(projectcss.all, sty.column__nzxEi)}>
                <Iframe
                  data-plasmic-name={"iframe"}
                  data-plasmic-override={overrides.iframe}
                  className={classNames("__wab_instance", sty.iframe)}
                  preview={true}
                  src={
                    "https://www.google.com/maps/d/u/3/embed?mid=1Zx_3Uf6PDwdBhYf3o9qBz4ekAz0w0Ow&ehbc=2E312F&noprof=1"
                  }
                />

                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__iVFlJ)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"foreground"}
                    data-plasmic-override={overrides.foreground}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__f50X)}
                    >
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__u6OLg
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__iKfOz
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__e8HI1
                            )}
                          >
                            {"WOW!"}
                          </div>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__dIcP5
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{ textDecoration: "underline" }}
                            >
                              {"Sali a bordo!"}
                            </span>
                          </React.Fragment>
                        </div>
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__adJK
                          )}
                        >
                          {
                            "Ciao ciao ciao iadjasijd\nsaudhausdasd\nsdhasdhusduashdsduahsduisadhua\ndhuasdhaihdaus"
                          }
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sEFh
                        )}
                      >
                        <Button2
                          className={classNames(
                            "__wab_instance",
                            sty.button2__pnRlO
                          )}
                          endIcon={
                            <Icon38Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__tkIxx
                              )}
                              role={"img"}
                            />
                          }
                          startIcon={
                            <ChecksvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg___67Tt6
                              )}
                              role={"img"}
                            />
                          }
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__oArI
                            )}
                          >
                            {"Start now ->"}
                          </div>
                        </Button2>
                        <Button2
                          className={classNames(
                            "__wab_instance",
                            sty.button2__jrNlv
                          )}
                          color={"clear"}
                          endIcon={
                            <Icon38Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__cPEu
                              )}
                              role={"img"}
                            />
                          }
                          startIcon={
                            <ChecksvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__nsDu4
                              )}
                              role={"img"}
                            />
                          }
                          submitsForm={true}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__yaQav
                            )}
                          >
                            {"Learn more\u2026"}
                          </div>
                        </Button2>
                      </Stack__>
                    </Stack__>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qEn2Z)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aphTl
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___285Zr
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__cvP1C
                            )}
                          >
                            {"Contattaci!"}
                          </div>
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__pupU9
                            )}
                          >
                            <Button2
                              className={classNames(
                                "__wab_instance",
                                sty.button2__lJfx
                              )}
                              color={"white"}
                              endIcon={
                                <Icon38Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ysNny
                                  )}
                                  role={"img"}
                                />
                              }
                              showStartIcon={true}
                              startIcon={
                                <Whatsapp128SvgrepoComsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__uhcJc
                                  )}
                                  role={"img"}
                                />
                              }
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__wEkFx
                                )}
                              >
                                {"Whatsapp"}
                              </div>
                            </Button2>
                            <Button2
                              className={classNames(
                                "__wab_instance",
                                sty.button2__buX6T
                              )}
                              color={"white"}
                              endIcon={
                                <Icon38Icon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__vSwmU
                                  )}
                                  role={"img"}
                                />
                              }
                              showStartIcon={true}
                              startIcon={
                                <Call1SvgrepoComsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__ox3VM
                                  )}
                                  role={"img"}
                                />
                              }
                              submitsForm={true}
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__zSeVm
                                )}
                              >
                                {"Chiamaci"}
                              </div>
                            </Button2>
                          </Stack__>
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__hxAkt
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ztZ2T
                              )}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__xv443
                              )}
                            >
                              {"Oppure"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___2AhFr
                              )}
                            />
                          </Stack__>
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__zx6VY
                            )}
                          >
                            <input
                              data-plasmic-name={"textbox"}
                              data-plasmic-override={overrides.textbox}
                              className={classNames(
                                projectcss.all,
                                projectcss.input,
                                sty.textbox
                              )}
                              onChange={e => {
                                generateStateOnChangeProp($state, [
                                  "textbox",
                                  "value"
                                ])(e.target.value);
                              }}
                              placeholder={"Nome"}
                              ref={ref => {
                                $refs["textbox"] = ref;
                              }}
                              size={1}
                              type={"text"}
                              value={
                                generateStateValueProp($state, [
                                  "textbox",
                                  "value"
                                ]) ?? ""
                              }
                            />

                            <input
                              data-plasmic-name={"textbox2"}
                              data-plasmic-override={overrides.textbox2}
                              className={classNames(
                                projectcss.all,
                                projectcss.input,
                                sty.textbox2
                              )}
                              onChange={e => {
                                generateStateOnChangeProp($state, [
                                  "textbox2",
                                  "value"
                                ])(e.target.value);
                              }}
                              placeholder={"Email"}
                              ref={ref => {
                                $refs["textbox2"] = ref;
                              }}
                              size={1}
                              type={"email"}
                              value={
                                generateStateValueProp($state, [
                                  "textbox2",
                                  "value"
                                ]) ?? ""
                              }
                            />

                            <textarea
                              data-plasmic-name={"textbox3"}
                              data-plasmic-override={overrides.textbox3}
                              className={classNames(
                                projectcss.all,
                                projectcss.textarea,
                                sty.textbox3
                              )}
                              onChange={e => {
                                generateStateOnChangeProp($state, [
                                  "textbox3",
                                  "value"
                                ])(e.target.value);
                              }}
                              placeholder={"Messaggio"}
                              ref={ref => {
                                $refs["textbox3"] = ref;
                              }}
                              rows={8}
                              value={
                                generateStateValueProp($state, [
                                  "textbox3",
                                  "value"
                                ]) ?? ""
                              }
                            />
                          </Stack__>
                          <Button2
                            className={classNames(
                              "__wab_instance",
                              sty.button2__kcUyN
                            )}
                            endIcon={
                              <Icon38Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__txcZy
                                )}
                                role={"img"}
                              />
                            }
                            startIcon={
                              <ChecksvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__uF6Ps
                                )}
                                role={"img"}
                              />
                            }
                            submitsForm={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ul9Vg
                              )}
                            >
                              {"Invia"}
                            </div>
                          </Button2>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__oPzJy
                          )}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__zSrhh
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__gObZ4
                            )}
                          >
                            {
                              "Ciao ciao Ciao ciao Ciao ciao\nCiao ciao Ciao ciao\nCiao ciao"
                            }
                          </div>
                        </div>
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </div>
          </Stack__>
          <div className={classNames(projectcss.all, sty.freeBox__caz8X)}>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__sJyiK)}
            >
              <div className={classNames(projectcss.all, sty.column__xk30Z)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fbV48)}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__qVyW)}
                    displayHeight={"40px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"none"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"40px"}
                    src={{
                      src: "/plasmic/naturalmentemare/images/fishingBoatBlackSilhouetteSmallShipsInFlatDesignKidToyStyleIllustrationOnWhiteBackgroundVectorRemovebgPreviewpng.png",
                      fullWidth: 500,
                      fullHeight: 500,
                      aspectRatio: undefined
                    }}
                  />

                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__qNXzZ)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__g2Xp4
                      )}
                    >
                      {"Seguici sui nostri social!"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__bN8Yb)}
                    >
                      <IconIcon
                        className={classNames(projectcss.all, sty.svg__ubhsZ)}
                        role={"img"}
                      />

                      <InstagramSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg___7Z4PG)}
                        role={"img"}
                      />

                      <TiktokSvgrepoComsvgIcon
                        className={classNames(projectcss.all, sty.svg__fR5Bl)}
                        role={"img"}
                      />
                    </Stack__>
                  </Stack__>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gt6S6
                  )}
                >
                  {"Contatti"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__f3AYl)}
                >
                  <MailAlt3SvgrepoComsvgIcon
                    className={classNames(projectcss.all, sty.svg__mn2Ge)}
                    role={"img"}
                  />

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__y5Uz2
                    )}
                  >
                    {"naturalmentemare@gmail.com"}
                  </div>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__fIkXa)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qiNfc)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__f83Qf
                    )}
                  >
                    {"Product"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__gnL5N)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__yssVo)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__zOynT)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__woWlE
                      )}
                    >
                      {"Pricing"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames(
                      "__wab_instance",
                      sty.button2___5Jder
                    )}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__pllwi)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__lj43W)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__lpg9F
                      )}
                    >
                      {"Integrations"}
                    </div>
                  </Button2>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__w7Rvl)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__jawme)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__eGjEe)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__xar3F
                      )}
                    >
                      {"Insights"}
                    </div>
                  </Button2>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column__xgGYj)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__mZv6X)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__nZBy8
                    )}
                  >
                    {"Support"}
                  </div>
                  <Button2
                    className={classNames("__wab_instance", sty.button2__o6Bd)}
                    color={"clear"}
                    endIcon={
                      <Icon38Icon
                        className={classNames(projectcss.all, sty.svg__dVhie)}
                        role={"img"}
                      />
                    }
                    size={"minimal"}
                    startIcon={
                      <ChecksvgIcon
                        className={classNames(projectcss.all, sty.svg__dsCov)}
                        role={"img"}
                      />
                    }
                    submitsForm={true}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__q4FfL
                      )}
                    >
                      {"Pricing"}
                    </div>
                  </Button2>
                </Stack__>
              </div>
              <div className={classNames(projectcss.all, sty.column___2L3L2)}>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__kucP3)}
                >
                  <Stack__
                    as={"div"}
                    data-plasmic-name={"foreground2"}
                    data-plasmic-override={overrides.foreground2}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.foreground2)}
                  >
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__qJc)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aObg
                        )}
                      >
                        <Stack__
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__tx5Hz
                          )}
                        >
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___7F59V
                            )}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__diOuP
                              )}
                            />

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__x91Zx
                              )}
                            >
                              {"Scrivici"}
                            </div>
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__bdC9Q
                              )}
                            />
                          </Stack__>
                          <Stack__
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rtIg
                            )}
                          >
                            <input
                              data-plasmic-name={"textbox6"}
                              data-plasmic-override={overrides.textbox6}
                              className={classNames(
                                projectcss.all,
                                projectcss.input,
                                sty.textbox6
                              )}
                              onChange={e => {
                                generateStateOnChangeProp($state, [
                                  "textbox6",
                                  "value"
                                ])(e.target.value);
                              }}
                              placeholder={"Nome"}
                              ref={ref => {
                                $refs["textbox6"] = ref;
                              }}
                              size={1}
                              type={"text"}
                              value={
                                generateStateValueProp($state, [
                                  "textbox6",
                                  "value"
                                ]) ?? ""
                              }
                            />

                            <input
                              data-plasmic-name={"textbox4"}
                              data-plasmic-override={overrides.textbox4}
                              className={classNames(
                                projectcss.all,
                                projectcss.input,
                                sty.textbox4
                              )}
                              onChange={e => {
                                generateStateOnChangeProp($state, [
                                  "textbox4",
                                  "value"
                                ])(e.target.value);
                              }}
                              placeholder={"Email"}
                              ref={ref => {
                                $refs["textbox4"] = ref;
                              }}
                              size={1}
                              type={"email"}
                              value={
                                generateStateValueProp($state, [
                                  "textbox4",
                                  "value"
                                ]) ?? ""
                              }
                            />

                            <textarea
                              data-plasmic-name={"textbox7"}
                              data-plasmic-override={overrides.textbox7}
                              className={classNames(
                                projectcss.all,
                                projectcss.textarea,
                                sty.textbox7
                              )}
                              onChange={e => {
                                generateStateOnChangeProp($state, [
                                  "textbox7",
                                  "value"
                                ])(e.target.value);
                              }}
                              placeholder={"Messaggio"}
                              ref={ref => {
                                $refs["textbox7"] = ref;
                              }}
                              rows={4}
                              value={
                                generateStateValueProp($state, [
                                  "textbox7",
                                  "value"
                                ]) ?? ""
                              }
                            />
                          </Stack__>
                          <Button2
                            className={classNames(
                              "__wab_instance",
                              sty.button2__uxxVg
                            )}
                            endIcon={
                              <Icon38Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kQwn3
                                )}
                                role={"img"}
                              />
                            }
                            startIcon={
                              <ChecksvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__zkHdf
                                )}
                                role={"img"}
                              />
                            }
                            submitsForm={true}
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__y5BIi
                              )}
                            >
                              {"Invia"}
                            </div>
                          </Button2>
                        </Stack__>
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pnieo
                          )}
                        />
                      </div>
                    </Stack__>
                  </Stack__>
                </Stack__>
              </div>
            </Stack__>
          </div>
        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "section",
    "button",
    "background2",
    "iframe",
    "foreground",
    "textbox",
    "textbox2",
    "textbox3",
    "foreground2",
    "textbox6",
    "textbox4",
    "textbox7"
  ],

  section: ["section", "button"],
  button: ["button"],
  background2: ["background2"],
  iframe: ["iframe"],
  foreground: ["foreground", "textbox", "textbox2", "textbox3"],
  textbox: ["textbox"],
  textbox2: ["textbox2"],
  textbox3: ["textbox3"],
  foreground2: ["foreground2", "textbox6", "textbox4", "textbox7"],
  textbox6: ["textbox6"],
  textbox4: ["textbox4"],
  textbox7: ["textbox7"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicContattaci__ArgProps,
          internalVariantPropNames: PlasmicContattaci__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicContattaci__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicContattaci";
  } else {
    func.displayName = `PlasmicContattaci.${nodeName}`;
  }
  return func;
}

function withUsePlasmicAuth(WrappedComponent) {
  const WithUsePlasmicAuthComponent = props => {
    const dataSourceCtx = usePlasmicDataSourceContext() ?? {};
    const { isUserLoading, user, token } = plasmicAuth.usePlasmicAuth({
      appId: "oim27Bu1ThuTn7RkGgxh5P"
    });
    return (
      <PlasmicDataSourceContextProvider__
        value={{
          ...dataSourceCtx,
          isUserLoading,
          userAuthToken: token,
          user
        }}
      >
        <WrappedComponent {...props} />
      </PlasmicDataSourceContextProvider__>
    );
  };
  return WithUsePlasmicAuthComponent;
}

export const PlasmicContattaci = Object.assign(
  // Top-level PlasmicContattaci renders the root element
  withUsePlasmicAuth(makeNodeComponent("root")),
  {
    // Helper components rendering sub-elements
    section: makeNodeComponent("section"),
    button: makeNodeComponent("button"),
    background2: makeNodeComponent("background2"),
    iframe: makeNodeComponent("iframe"),
    foreground: makeNodeComponent("foreground"),
    textbox: makeNodeComponent("textbox"),
    textbox2: makeNodeComponent("textbox2"),
    textbox3: makeNodeComponent("textbox3"),
    foreground2: makeNodeComponent("foreground2"),
    textbox6: makeNodeComponent("textbox6"),
    textbox4: makeNodeComponent("textbox4"),
    textbox7: makeNodeComponent("textbox7"),
    // Metadata about props expected for PlasmicContattaci
    internalVariantProps: PlasmicContattaci__VariantProps,
    internalArgProps: PlasmicContattaci__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "Contatti",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicContattaci;
/* prettier-ignore-end */
